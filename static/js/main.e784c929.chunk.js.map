{"version":3,"sources":["components/search-box/search-box.jsx","components/card/card.jsx","components/card-list/card-list.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","searchedMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySASeA,MANf,YAAgD,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aAC5B,OACQ,uBAAOC,UAAU,SAASF,YAAaA,EAAaG,KAAK,SAASC,SAAUH,K,YCSzEI,MAXf,SAAcC,GAEV,OACI,sBAAKJ,UAAU,iBAAf,UACA,qBAAKK,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACrB,6BAAMJ,EAAMG,QAAQE,OACpB,kCAAKL,EAAMG,QAAQG,aCLfC,EAAS,SAAAP,GAClB,OAEA,qBAAKJ,UAAU,YAAf,SACCI,EAAMQ,SAASC,KAAI,SAACN,GAAD,OACpB,cAAC,EAAD,CAAyBA,QAASA,GAArBA,EAAQC,UC+BVM,E,kDAhCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IAJJ,E,gEAOO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAACV,SAAUS,S,+BAE/B,IAAD,SACuBE,KAAKR,MAA5BH,EADA,EACAA,SAASI,EADT,EACSA,YACVQ,EAAiBZ,EAASa,QAAO,SAAAlB,GAAO,OAAIA,EAAQE,KAAKiB,cAAcC,SAASX,EAAYU,kBAGtG,OACE,sBAAK1B,UAAU,MAAf,UACC,0CACA,cAAC,EAAD,CACCF,YAAY,kBACZC,aAAc,SAAA6B,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACvD,cAAC,EAAD,CAAUlB,SAAUY,W,GAzBNO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e784c929.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./search-box.css\"\r\n\r\nfunction SearchBox({placeholder,handleChange}) {\r\n    return (\r\n            <input className=\"search\" placeholder={placeholder} type=\"search\" onChange={handleChange} />\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n    \r\n    return (\r\n        <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}  />\r\n         <h2 >{props.monster.name}</h2>  \r\n         <p> {props.monster.email}</p>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport  \"./card-list.styles.css\";\r\nimport Card from \"../card/card.jsx\";\r\n\r\nexport const CardList=props => {\r\n    return (\r\n        \r\n    <div className=\"card-list\">\r\n    {props.monsters.map((monster) => \r\n    <Card key = {monster.id} monster={monster} /> )} \r\n    </div>\r\n      \r\n    )\r\n}\r\n\r\n\r\n","import React,{Component} from \"react\";\nimport './App.css';\nimport SearchBox from \"./components/search-box/search-box.jsx\";\nimport {CardList} from \"./components/card-list/card-list.jsx\";\n\n\nclass App extends Component\n{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=> response.json())\n    .then(users=> this.setState({monsters: users}) )\n  }\n  render() {\n    const {monsters,searchField}= this.state;\n    const searchedMonster= monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\nreturn(\n  <div className=\"App\">   \n   <h1>Monsters</h1>\n   <SearchBox \n    placeholder=\"search monsters\"\n    handleChange={e => this.setState({searchField:e.target.value})}/>\n    <CardList monsters={searchedMonster} />\n\n  </div>\n)\n    \n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}